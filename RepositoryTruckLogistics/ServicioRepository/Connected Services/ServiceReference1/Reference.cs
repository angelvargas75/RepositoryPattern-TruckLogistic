//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicioRepository.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServicioWCFCamion")]
    public interface IServicioWCFCamion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Get", ReplyAction="http://tempuri.org/IServicioWCFCamion/GetResponse")]
        Dominio.Camion Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Get", ReplyAction="http://tempuri.org/IServicioWCFCamion/GetResponse")]
        System.Threading.Tasks.Task<Dominio.Camion> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Insert", ReplyAction="http://tempuri.org/IServicioWCFCamion/InsertResponse")]
        bool Insert(Dominio.Camion datos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Insert", ReplyAction="http://tempuri.org/IServicioWCFCamion/InsertResponse")]
        System.Threading.Tasks.Task<bool> InsertAsync(Dominio.Camion datos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Update", ReplyAction="http://tempuri.org/IServicioWCFCamion/UpdateResponse")]
        bool Update(Dominio.Camion datos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Update", ReplyAction="http://tempuri.org/IServicioWCFCamion/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(Dominio.Camion datos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Delete", ReplyAction="http://tempuri.org/IServicioWCFCamion/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCFCamion/Delete", ReplyAction="http://tempuri.org/IServicioWCFCamion/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioWCFCamionChannel : ServicioRepository.ServiceReference1.IServicioWCFCamion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioWCFCamionClient : System.ServiceModel.ClientBase<ServicioRepository.ServiceReference1.IServicioWCFCamion>, ServicioRepository.ServiceReference1.IServicioWCFCamion {
        
        public ServicioWCFCamionClient() {
        }
        
        public ServicioWCFCamionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioWCFCamionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioWCFCamionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioWCFCamionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Dominio.Camion Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<Dominio.Camion> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public bool Insert(Dominio.Camion datos) {
            return base.Channel.Insert(datos);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAsync(Dominio.Camion datos) {
            return base.Channel.InsertAsync(datos);
        }
        
        public bool Update(Dominio.Camion datos) {
            return base.Channel.Update(datos);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(Dominio.Camion datos) {
            return base.Channel.UpdateAsync(datos);
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
